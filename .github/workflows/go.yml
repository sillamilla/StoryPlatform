name: Go CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  setup:
    name: Set Up Environment
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4.1.0
      with:
        go-version: '1.22.1'
    - name: Install dependencies
      run: go mod download

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4.1.0
      with:
        go-version: '1.22.1'
    - name: Build
      run: go build -v ./...

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4.1.0
      with:
        go-version: '1.22.1'
    - name: Run Unit Tests
      run: make test.unit

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: setup
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres123
          POSTGRES_PASSWORD: postgres123
          POSTGRES_DB: postgres123
        options: >-
          --health-cmd "pg_isready -U postgres123" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4.1.0
      with:
        go-version: '1.22.1'
    - name: Install goose
      run: go install github.com/pressly/goose/v3/cmd/goose@latest
    - name: Wait for Postgres to be ready
      run: until pg_isready -h localhost -p 5432 -U postgres123; do sleep 1; done
    - name: Run Integration Tests
      env:
        GIN_MODE: release
      run: make test.integration
